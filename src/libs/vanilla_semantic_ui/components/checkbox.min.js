ui.checkbox=function(n,e){var t,c,i=e.selector,a=e.error,o=e.className,d=n.querySelectorAll(i.label),r=(r=n.querySelectorAll(i.input))[0],l=!1,s=!1;return c={initialize:function(){c.verbose("Initializing checkbox",e),c.create.label(),c.bind.events(),c.set.tabbable(),c.hide.input(),c.observeChanges(),c.setup()},fix:{reference:function(){n.matches(i.input)&&(c.debug("Behavior called on <input> adjusting invoked element"),n=n.closest(i.checkbox),c.refresh())}},setup:function(){c.set.initialLoad(),c.is.indeterminate()?(c.debug("Initial value is indeterminate"),c.indeterminate()):c.is.checked()?(c.debug("Initial value is checked"),c.check()):(c.debug("Initial value is unchecked"),c.uncheck()),c.remove.initialLoad()},refresh:function(){d=n.querySelectorAll("> "+i.label),r=(r=n.querySelectorAll("> "+i.input))[0]},hide:{input:function(){c.verbose("Modifying <input> z-index to be unselectable"),r.classList.add(o.hidden)}},show:{input:function(){c.verbose("Modifying <input> z-index to be selectable"),r.classList.remove(o.hidden)}},observeChanges:function(){"MutationObserver"in window&&((t=new MutationObserver(function(e){c.debug("DOM tree modified, updating selector cache"),c.refresh()})).observe(n,{childList:!0,subtree:!0}),c.debug("Setting up mutation observer",t))},attachEvents:function(e,n){var t=document.querySelectorAll(e);n="function"==typeof c[n]?c[n]:c.toggle,0<t.length?(c.debug("Attaching checkbox events to element",e,n),t.forEach(function(e){e.onclick=n})):c.error(a.notFound)},event:{click:function(e){ui.checkTarget(e,i.input)?c.verbose("Using default check action on initialized checkbox"):ui.checkTarget(e,i.link)?c.debug("Clicking link inside checkbox, skipping toggle"):(c.toggle(),r.focus(),e.preventDefault())},keydown:function(e){var n=e.which,t=13,i=32;n==27?(c.verbose("Escape key pressed blurring field"),r.blur(),s=!0):e.ctrlKey||n!=i&&n!=t?s=!1:(c.verbose("Enter/space key pressed, toggling checkbox"),c.toggle(),s=!0)},keyup:function(e){s&&e.preventDefault()}},check:function(){c.should.allowCheck()&&(c.debug("Checking checkbox",r),c.set.checked(),c.should.ignoreCallbacks()||(e.onChecked.call(r),e.onChange.call(r)))},uncheck:function(){c.should.allowUncheck()&&(c.debug("Unchecking checkbox"),c.set.unchecked(),c.should.ignoreCallbacks()||(e.onUnchecked.call(r),e.onChange.call(r)))},indeterminate:function(){c.should.allowIndeterminate()?c.debug("Checkbox is already indeterminate"):(c.debug("Making checkbox indeterminate"),c.set.indeterminate(),c.should.ignoreCallbacks()||(e.onIndeterminate.call(r),e.onChange.call(r)))},determinate:function(){c.should.allowDeterminate()?c.debug("Checkbox is already determinate"):(c.debug("Making checkbox determinate"),c.set.determinate(),c.should.ignoreCallbacks()||(e.onDeterminate.call(r),e.onChange.call(r)))},enable:function(){c.is.enabled()?c.debug("Checkbox is already enabled"):(c.debug("Enabling checkbox"),c.set.enabled(),e.onEnable.call(r))},disable:function(){c.is.disabled()?c.debug("Checkbox is already disabled"):(c.debug("Disabling checkbox"),c.set.disabled(),e.onDisable.call(r))},get:{radios:function(){var e=c.get.name();return document.querySelector('input[name="'+e+'"]').closest(i.checkbox)},otherRadios:function(){return c.get.radios().not(c)},name:function(){return r.getAttribute("name")}},is:{initialLoad:function(){return l},radio:function(){return r.classList.contains(o.radio)||"radio"==r.getAttribute("type")},indeterminate:function(){return void 0!==r.indeterminate&&r.indeterminate},checked:function(){return void 0!==r.checked&&r.checked},disabled:function(){return void 0!==r.disabled&&r.disabled},enabled:function(){return!c.is.disabled()},determinate:function(){return!c.is.indeterminate()},unchecked:function(){return!c.is.checked()}},should:{allowCheck:function(){return c.is.determinate()&&c.is.checked()&&!c.should.forceCallbacks()?(c.debug("Should not allow check, checkbox is already checked"),!1):!1!==e.beforeChecked.apply(r)||(c.debug("Should not allow check, beforeChecked cancelled"),!1)},allowUncheck:function(){return c.is.determinate()&&c.is.unchecked()&&!c.should.forceCallbacks()?(c.debug("Should not allow uncheck, checkbox is already unchecked"),!1):!1!==e.beforeUnchecked.apply(r)||(c.debug("Should not allow uncheck, beforeUnchecked cancelled"),!1)},allowIndeterminate:function(){return c.is.indeterminate()&&!c.should.forceCallbacks()?(c.debug("Should not allow indeterminate, checkbox is already indeterminate"),!1):!1!==e.beforeIndeterminate.apply(r)||(c.debug("Should not allow indeterminate, beforeIndeterminate cancelled"),!1)},allowDeterminate:function(){return c.is.determinate()&&!c.should.forceCallbacks()?(c.debug("Should not allow determinate, checkbox is already determinate"),!1):!1!==e.beforeDeterminate.apply(r)||(c.debug("Should not allow determinate, beforeDeterminate cancelled"),!1)},forceCallbacks:function(){return c.is.initialLoad()&&e.fireOnInit},ignoreCallbacks:function(){return l&&!e.fireOnInit}},can:{change:function(){return!(n.classList.contains(o.disabled)||n.classList.contains(o.readOnly)||r.disabled||r.readonly)},uncheck:function(){return"boolean"==typeof e.uncheckable?e.uncheckable:!c.is.radio()}},set:{initialLoad:function(){l=!0},checked:function(){c.verbose("Setting class to checked"),n.classList.remove(o.indeterminate),n.classList.add(o.checked),c.is.radio()&&c.uncheckOthers(),c.is.indeterminate()||!c.is.checked()?(c.verbose("Setting state to checked",r),r.indeterminate=!1,r.checked=!0,c.trigger.change()):c.debug("Input is already checked, skipping input property change")},unchecked:function(){c.verbose("Removing checked class"),n.classList.remove(o.indeterminate),n.classList.remove(o.checked),c.is.indeterminate()||!c.is.unchecked()?(c.debug("Setting state to unchecked"),r.indeterminate=!1,r.checked=!1,c.trigger.change()):c.debug("Input is already unchecked")},indeterminate:function(){c.verbose("Setting class to indeterminate"),n.classList.add(o.indeterminate),c.is.indeterminate()?c.debug("Input is already indeterminate, skipping input property change"):(c.debug("Setting state to indeterminate"),r.indeterminate=!0,c.trigger.change())},determinate:function(){c.verbose("Removing indeterminate class"),n.classList.remove(o.indeterminate),c.is.determinate()?c.debug("Input is already determinate, skipping input property change"):(c.debug("Setting state to determinate"),r.indeterminate=!1)},disabled:function(){c.verbose("Setting class to disabled"),n.classList.add(o.disabled),c.is.disabled()?c.debug("Input is already disabled, skipping input property change"):(c.debug("Setting state to disabled"),r.disabled="disabled",c.trigger.change())},enabled:function(){c.verbose("Removing disabled class"),n.classList.remove(o.disabled),c.is.enabled()?c.debug("Input is already enabled, skipping input property change"):(c.debug("Setting state to enabled"),r.disabled=!1,c.trigger.change())},tabbable:function(){c.verbose("Adding tabindex to checkbox"),void 0===r.getAttribute("tabindex")&&r.setAttribute("tabindex",0)}},remove:{initialLoad:function(){l=!1}},trigger:{change:function(){var e=document.createEvent("HTMLEvents"),n=r[0];n&&(c.verbose("Triggering native change event"),e.initEvent("change",!0,!1),n.dispatchEvent(e))}},create:{label:function(){for(;n.previousElementSibling&&n.previousElementSibling.matches(i.label);){var e=n.previousElementSibling;return e.remove(),r.after(e),void c.debug("Moving existing label",d)}d=document.createElement("label"),r.after(d),c.debug("Creating label",d)}},has:{label:function(){return 0<d.length}},bind:{events:function(){function e(n){return function(e){ui.checkTarget(e,i.input)&&n()}}c.verbose("Attaching checkbox events"),n.onclick=c.event.click,n.onkeydown=e(c.event.keydown),n.onkeyup=e(c.event.keyup)}},unbind:{events:function(){c.debug("Removing events"),n.onclick=void 0,n.onkeydown=void 0,n.onkeyup=void 0}},uncheckOthers:function(){var e=c.get.otherRadios();c.debug("Unchecking other radios",e),e.classList.remove(o.checked)},toggle:function(){c.can.change()?c.is.indeterminate()||c.is.unchecked()?(c.debug("Currently unchecked"),c.check()):c.is.checked()&&c.can.uncheck()&&(c.debug("Currently checked"),c.uncheck()):c.is.radio()||c.debug("Checkbox is read-only or disabled, ignoring toggle")}}},ui.checkbox.settings={silent:!1,debug:!1,verbose:!0,performance:!0,uncheckable:"auto",fireOnInit:!1,onChange:function(){},beforeChecked:function(){},beforeUnchecked:function(){},beforeDeterminate:function(){},beforeIndeterminate:function(){},onChecked:function(){},onUnchecked:function(){},onDeterminate:function(){},onIndeterminate:function(){},onEnable:function(){},onDisable:function(){},error:{method:"The method you called is not defined"},selector:{checkbox:".ui.checkbox",label:"label, .box",input:'input[type="checkbox"], input[type="radio"]',link:"a[href]"},className:{checked:"checked",indeterminate:"indeterminate",disabled:"disabled",hidden:"hidden",radio:"radio",readOnly:"read-only"}};